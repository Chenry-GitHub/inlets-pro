---
## This example exposes Prometheus from your OpenFaaS instance on a HTTP tunnel server
---

## It uses secrets that are mounted into the Pod for the token and the license

# kubectl create secret generic inlets-server-token --from-literal inlets-server-token=$TOKEN
# kubectl create secret generic inlets-license --from-file inlets-license=$HOME/.inlets/LICENSE

# Change SERVER_IP_HERE
#
# Optionally: change --upstream or add a custom domain such as 
# tunnel.example.com=http://prometheus.openfaas:9090
#
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: inlets-client
spec:
  replicas: 1
  selector:
    matchLabels:
      app: inlets-client
  template:
    metadata:
      labels:
        app: inlets-client
    spec:
      volumes:
      - name: inlets-license
        secret:
          secretName: inlets-license
      - name: inlets-server-token
        secret:
          secretName: inlets-server-token
      containers:
      - name: inlets-client
        image: ghcr.io/inlets/inlets-pro:0.9.17
        imagePullPolicy: IfNotPresent
        command: ["inlets-pro"]
        args:
        - "http"
        - "client"
        - "--url=wss://SERVER_IP_HERE:8123"
        - "--token-file=/var/secrets/inlets-server-token/inlets-server-token"
        - "--license-file=/var/secrets/inlets-license/inlets-license"
        - "--upstream=http://prometheus.openfaas:9090"
        volumeMounts:
          - mountPath: /var/secrets/inlets-server-token
            name: inlets-server-token
          - mountPath: /var/secrets/inlets-license
            name: inlets-license

